const mathJaxConfig = {
  tex: {
      packages: { '[+]': ['color', 'ams', 'mathtools', 'amsmath', 'lmodern', 'bm', 'base', 'html'] },
      macros: {
          R: "\\mathbb{R}",
          Rnonneg: "\R_{\\geq 0}",
          Q: "\\mathbb{Q}",
          Qnonneg: "\Q_{\\geq 0}",
          N: "\\mathbb{N}",
          NZero: "\\N_{\\geq 0}",
          NTo: ["\\left[ #1 \\right]", 1],

          zero: "\\boldsymbol{0}",
          one: "\\boldsymbol{1}",

          vht: "\\vh_t",
          vhtplus: "\\vh_{t + 1}",
          vhtminus: "\\vh_{t - 1}",

          func: "f",
          vfunc: "\\boldsymbol{f}",
          vfuncFun: ["\\vfunc\\left(#1\\right)", 1],

          sigmoid: "\\boldsymbol{\\sigma}",
          sigmoidFun: ["\\sigmoid\\left(#1\\right)", 1],
          heaviside: "H",
          heavisideFun: ["\\heaviside\\left(#1\\right)", 1],

          rep: "\\boldsymbol{r}",
          repFun: ["\\rep\\left(#1\\right)", 1],
          repr: "\\textsf{rep}",

          norm: ["\\| #1 \\|", 1],

          simplex: "\\Delta",
          simplexFun: ["\\simplex^{#1}", 1],
          SimplexEosalphabetminus: "\\simplexFun{\\eosnsymbols - 1}",
          projfuncEosalphabetminusFunc: ["\\projfunc\\left(#1\\right)", 1],
          SimplexEosalphabet: "\\simplexFun{\\eosnsymbols}",
          Simplexnminus: "\\simplexFun{N - 1}",
          projfuncEosalphabetminus: "\\projfunc",
          prob: "p",

          softmax: "\\text{softmax}",
          softmaxFun: ["\\softmax\\left(#1\\right)", 1],
          softmaxfunc: ["\\softmax\\left(#1\\right)_{#2}", 2],
          sparsemax: "\\text{sparsemax}",
          sparsemaxFun: ["\\sparsemax\\left(#1\\right)", 1],
          sparsemaxfunc: ["\\sparsemax\\left(#1\\right)_{#2}", 2],
          invtemp: "\\lambda",

          entropy: "\\text{H}",
          entropyFun: ["\\entropy\\left(#1\\right)", 1],

          argmax: "\\text{argmax}",
          argmin: "\\text{argmin}",

          ind: ["\\boldsymbol{1}\\left[#1\\right]", 1],

          enc: "\\boldsymbol{h}",
          encFun: ["\\enc\\left(#1\\right)", 1],

          sym: "y",
          symt: "\\sym_t",
          eosMacro: ["\\overline{#1}", 1],
          eossym: "\\eosMacro{y}",
          eos: "\\text{EOS}",
          str: "\\boldsymbol{y}",
          strlt: "\\str_{<t}",
          strlet: "\\str_{\\leq t}",
          strlen: "T",

          bos: "\\text{BOS}",
          bosMacro: ["\\underline{#1}", 1],
          bossym: "\\bosMacro{\\sym}",
          bosalphabet: "\\bosMacro{\\alphabet}",
          cotalphabet: "\\Delta",
          lang: "L",

          stacksym: "\\gamma",
          stackseq: "\\boldsymbol{\\gamma}",

          plm: "p",
          qlm: "q",
          pFun: ["\\plm\\left(#1\\right)", 1],
          pcFun: ["\\plm\\left(#1 \\mid #2\\right)", 2],
          eps: "\\varepsilon",
          alphabet: "\\Sigma",
          eosalphabet: "\\eosMacro{\\alphabet}",
          stackalphabet: "\\Gamma",
          stacktop: "\\gamma",
          kleene: ["{#1}^*", 1],

          nsymbols: "{|\\alphabet|}",
          eosnsymbols: "{|\\eosalphabet|}",

          timestep: "t",

          bigO: "\\mathcal{O}",
          bigOFun: ["\\bigO\\left(#1\\right)", 1],

          defeq: "\\overset{\\textnormal{def}}{=}",
          ifcond: "\\textbf{if }",
          otherwisecond: "\\textbf{otherwise }",

          fsa: "\\mathcal{A}",
          states: "Q",
          nstates: "|\\states|",
          transf: "\\delta",
          initials: "\\mathcal{I}",
          finals: "\\mathcal{F}",
          initialf: "\\lambda",
          finalf: "\\rho",
          initialfFun: ["\\initialf\\left(#1\\right)", 1],
          finalfFun: ["\\finalf\\left(#1\\right)", 1],
          wfsatuple: "\\left(\\alphabet, \\states, \\transf, \\initialf, \\finalf\\right)",
          edge: ["#1 \\xrightarrow{#2 / #3} #4", 4],

          onehot: ["[\\![#1]\\!]", 1],

          plmA: "\\plm_{\\fsa}",
          plmAFun: ["\\plmA\\left(#1\\right)", 1],
          plmACFun: ["\\plmA\\left(#1 \\mid #2\\right)", 2],

          plmR: "\\plm_{\\rnn}",
          plmRFun: ["\\plmR\\left(#1\\right)", 1],
          plmRCFun: ["\\plmR\\left(#1 \\mid #2\\right)", 2],

          apath: "\\boldsymbol{\\pi}",
          pathlen: "T",
          yield: "\\boldsymbol{s}",
          paths: "\\boldsymbol{\\Pi}",
          pathsFun: ["\\paths\\left(#1\\right)", 1],
          weight: "w",
          weightFun: ["\\weight\\left(#1\\right)", 1],
          prefixweight: "\\widetilde{\\weight}",
          prefixweightFun: ["\\prefixweight\\left(#1\\right)", 1],

          projfunc: "\\boldsymbol{\\pi}",
          projfuncFun: ["\\projfunc\\left(#1\\right)", 1],

          tfnumlayer: "L",
          tfheadnum: "H",
          tfheadCombine: "\\mathcal{H}",
          qTransf: "Q",
          qTransfFun: ["\\qTransf\\left(#1\\right)", 1],
          vTransf: "V",
          vTransfFun: ["\\vTransf\\left(#1\\right)", 1],
          kTransf: "K",
          kTransfFun: ["\\kTransf\\left(#1\\right)", 1],
          fTransf: "F",
          fTransfFun: ["\\fTransf\\left(#1\\right)", 1],
          oTransf: "O",
          oTransfFun: ["\\oTransf\\left(#1\\right)", 1],
          tfscorefun: "\\func",
          attn: "\\texttt{Att}",
          attnBlock: "\\texttt{A}",
          attnBlockMH: "\\tflayer^\\tfheadnum",
          attnfunc: "\\vfunc_\\texttt{Att}",
          posEnc: "\\Pi",
          posInEmbedding: "\\rep_\\posEnc",

          inner: ["\\langle #1, #2 \\rangle", 2],

          tm: "\\mathcal{M}",
          trans: "\\delta",
          stateq: "q",
          stateqt: "q_t",
          initstate: "\\stateq_i",
          finalstate: "\\stateq_f",
          tmop: "d",
          tmleft: "\\textsf{L}",
          tmright: "\\textsf{R}",
          tmnoop: "\\textsf{N}",
          tmops: "\\{\\tmleft, \\tmright, \\tmnoop \\}",
          blanksym: "\\bot",
          tmUwEdge: ["#1 \\xrightarrow{#2, #3 \\rightarrow #4/#5} #6", 6],

          pushdown: "\\mathcal{P}",
          twoPdaUwEdge: ["#1 \\xrightarrow[#5 \\rightarrow #7]{#2, #3, #4 \\rightarrow #6} #8", 8],

          stack: "\\textsf{STACK}",
          buffer: "\\textsf{BUFF}",
          config: "\\textsf{CONFIG}",
          action: "\\textsf{action}",
          op: "\\textsf{OP}",
          noop: "\\textsf{NO-OP}",
          push: "\\textsf{PUSH}",
          pop: "\\textsf{POP}",
          accept: "\\textsf{ACCEPT}",
          digit: "\\textsf{digit}",

          pdaUwEdge: ["#1 \\xrightarrow{#2, #3 \\rightarrow #4} #5", 5],

          // RNNs
          rnn: "\\mathcal{R}",
          hiddDim: "D",
          recMtx: "\\mU",
          inMtx: "\\mV",
          outMtx: "\\mE",
          biasVec: "\\vb",
          activation: "\\boldsymbol{\\sigmoid}",
          rnnInitstate: "\\veta",
          elmanrnntuple: "\\left(\\Q^\\hiddDim, \\alphabet, \\activation, \\recMtx, \\inMtx, \\biasVec, \\rnnInitstate\\right)",
          hiddState: "\\vh",
          hiddStatet: "\\vh_t",
          hiddStatetzero: "\\vh_0",
          hiddStatetminus: "\\vh_{t-1}",
          inEmbedding: "\\rep",
          embedDim: "R",
          precision: "\\psi",
          precisionFun: ["\\precision\\left(#1\\right)", 1],

          ReLU: "\\text{ReLU}",
          mlp: "\\mathcal{M}",
          mlpFun: ["\\mlp\\left(#1\\right)", 1],

          ngr: "n",
          ngram: "\\ngr-\\text{gram}",

          setsize: "N",

          // Vectors
          vzero: '{\\mathbf{0}}',
          vone: '{\\mathbf{1}}',
          vmu: '{\\boldsymbol{\\mu}}',
          veta: '{\\boldsymbol{\\eta}}',
          vtheta: '{\\boldsymbol{\\theta}}',
          vphi: '{\\boldsymbol{\\phi}}',
          vvarphi: '{\\boldsymbol{\\varphi}}',
          va: '{\\mathbf{a}}',
          vb: '{\\mathbf{b}}',
          vc: '{\\mathbf{c}}',
          vd: '{\\mathbf{d}}',
          ve: '{\\mathbf{e}}',
          vf: '{\\mathbf{f}}',
          vg: '{\\mathbf{g}}',
          vh: '{\\mathbf{h}}',
          vi: '{\\mathbf{i}}',
          vj: '{\\mathbf{j}}',
          vk: '{\\mathbf{k}}',
          vl: '{\\mathbf{l}}',
          vm: '{\\mathbf{m}}',
          vn: '{\\mathbf{n}}',
          vo: '{\\mathbf{o}}',
          vp: '{\\mathbf{p}}',
          vq: '{\\mathbf{q}}',
          vr: '{\\mathbf{r}}',
          vs: '{\\mathbf{s}}',
          vt: '{\\mathbf{t}}',
          vu: '{\\mathbf{u}}',
          vv: '{\\mathbf{v}}',
          vw: '{\\mathbf{w}}',
          vx: '{\\mathbf{x}}',
          vy: '{\\mathbf{y}}',
          vz: '{\\mathbf{z}}',

          // Elements of vectors
          evalpha: '{\\alpha}',
          eveta: '{\\eta}',
          evlambda: '{\\lambda}',
          evbeta: '{\\beta}',
          evepsilon: '{\\epsilon}',
          evomega: '{\\omega}',
          evmu: '{\\mu}',
          evvarphi: '{\\varphi}',
          evpsi: '{\\psi}',
          evsigma: '{\\sigma}',
          evtheta: '{\\theta}',
          eva: '{a}',
          evb: '{b}',
          evc: '{c}',
          evd: '{d}',
          eve: '{e}',
          evf: '{f}',
          evg: '{g}',
          evh: '{h}',
          evi: '{i}',
          evj: '{j}',
          evk: '{k}',
          evl: '{l}',
          evm: '{m}',
          evn: '{n}',
          evo: '{o}',
          evp: '{p}',
          evq: '{q}',
          evr: '{r}',
          evs: '{s}',
          evt: '{t}',
          evu: '{u}',
          evv: '{v}',
          evw: '{w}',
          evx: '{x}',
          evy: '{y}',
          evz: '{z}',

          // Matrices
          mA: '{\\mathbf{A}}',
          mB: '{\\mathbf{B}}',
          mC: '{\\mathbf{C}}',
          mD: '{\\mathbf{D}}',
          mE: '{\\mathbf{E}}',
          mF: '{\\mathbf{F}}',
          mG: '{\\mathbf{G}}',
          mH: '{\\mathbf{H}}',
          mI: '{\\mathbf{I}}',
          mJ: '{\\mathbf{J}}',
          mK: '{\\mathbf{K}}',
          mL: '{\\mathbf{L}}',
          mM: '{\\mathbf{M}}',
          mN: '{\\mathbf{N}}',
          mO: '{\\mathbf{O}}',
          mP: '{\\mathbf{P}}',
          mQ: '{\\mathbf{Q}}',
          mR: '{\\mathbf{R}}',
          mS: '{\\mathbf{S}}',
          mT: '{\\mathbf{T}}',
          mU: '{\\mathbf{U}}',
          mV: '{\\mathbf{V}}',
          mW: '{\\mathbf{W}}',
          mX: '{\\mathbf{X}}',
          mY: '{\\mathbf{Y}}',
          mZ: '{\\mathbf{Z}}',
          mBeta: '{\\boldsymbol{\\beta}}',
          mPhi: '{\\boldsymbol{\\Phi}}',
          mLambda: '{\\boldsymbol{\\Lambda}}',
          mSigma: '{\\boldsymbol{\\Sigma}}',

          false: '{\\bot}',
          true: '{\\top}',
          
          past: '{\\mathrel{\\textbf{P}}}',
          future: '{\\mathrel{\\textbf{F}}}',

          since: '{\\mathrel{\\textbf{S}}}',
          until: '{\\mathrel{\\textbf{U}}}',

          pfo: '{\\textbf{PFO}^2[<]}',
          ptl: '{\\textbf{LTL}[\\past]}'
      },
      inlineMath: [['$', '$'], ['\\(', '\\)']],
      displayMath: [['$$', '$$'], ['\\[', '\\]']],
  },
  svg: {
      fontCache: 'global',
  },
};

export default mathJaxConfig;